name: Build and Deploy React App

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache de dependências
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalar dependências
        run: npm install

      - name: Build da aplicação (com aumento de memória e sem sourcemaps)
        run: NODE_OPTIONS="--max-old-space-size=4096" npm run build -- --no-sourcemap

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Criar imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest .

      - name: Enviar imagem para o Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest

  deploy-app:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: [self-hosted, windows, x64]
    steps:
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Parar e remover container antigo
        shell: powershell
        run: |
          docker stop my-react-app || $true
          docker rm my-react-app || $true

      - name: Limpar imagens antigas
        shell: powershell
        run: docker image prune -af

      - name: Limpar volumes órfãos
        shell: powershell
        run: docker volume prune -f

      - name: Baixar imagem mais recente
        shell: powershell
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest

      - name: Iniciar novo container
        shell: powershell
        run: |
          docker run -d `
            --name my-react-app `
            -p 80:80 `
            --restart always `
            ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest

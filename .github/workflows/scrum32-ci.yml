name: Frontend Integration Tests

on:
  pull_request:
    branches: [ SCRUM32 ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: api
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout frontend code
        uses: actions/checkout@v3

      - name: Checkout backend code
        uses: actions/checkout@v3
        with:
          repository: TeamHiveAPI/API-2025.01-BACK
          ref: SCRUM32
          path: backend

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install alembic

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            pg_isready -h postgres -U postgres && echo "Postgres is ready!" && exit 0
            echo "Waiting for postgres..."
            sleep 2
          done
          echo "Postgres did not become ready in time" && exit 1

      - name: Run migrations
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:root@postgres:5432/api
        run: alembic upgrade head

      - name: Start backend
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:root@postgres:5432/api
          SECRET_KEY: "your-secret-key-here"
          ALGORITHM: "HS256"
          ACCESS_TOKEN_EXPIRE_MINUTES: "30"
        run: |
          python -m uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 20

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm ci

      - name: Run frontend tests
        run: npm test

      - name: Build frontend
        run: npm run build
